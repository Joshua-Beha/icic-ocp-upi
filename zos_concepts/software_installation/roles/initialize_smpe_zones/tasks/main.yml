---
# Copyright (c) IBM Corporation 2021

# tasks file for initialize_smpe_zones
- name: "INITALIZE GLOBAL ZONE"
  ibm.ibm_zos_core.zos_mvs_raw:
    pgm: GIMSMP
    auth: "yes"
    dds:
      - dd_data_set:
          dd_name: "SMPCSI"
          data_set_name: "{{ global_csi }}"
          disposition: old

      - dd_output:
          dd_name: "SMPOUT"
          return_content:
              type: text

      - dd_output:
          dd_name: "SMPRPT"
          return_content:
              type: text

      - dd_output:
          dd_name: "SMPSNAP"
          return_content:
              type: text

      - dd_input:
          dd_name: "SMPCNTL"
          content: |
              SET   BDY(GLOBAL) .           /* SET TO GLOBAL ZONE         */
              UCLIN.
                ADD GLOBALZONE              /* DEFINE GLOBAL ZONE NOW     */
                  OPTIONS(ESAOPT)         /* DEFINE AN OPTIONS ENTRY    */
                  SREL(Z038)              /* MVS                        */
                  ZONEINDEX(              /* ZONES TO BE SET UP         */
                    ({{ target_zone }},{{ global_csi}},TARGET),
                    ({{ dist_zone }},{{ global_csi }},DLIB))
                  .
                ADD OPTIONS(ESAOPT)         /* ADD AN OPTIONS ENTRY       */
                  ASM(ASMUTIL)            /* SMP ASSEMBLER UTILITY NAME */
                  LKED(LINKEDIT)          /* SMP LINK EDIT UTILITY NAME */
                  DSPREFIX({{smpe_hlq}})
                  DSSPACE(1500,1500,1500) /* SPACE FOR TLIB DATA SETS   */
                  .
                ADD UTILITY(ASMUTIL)        /* ASSEMBLER UTILITY ENTRY    */
                  NAME(ASMA90)            /* ASMA90 IS ASSEMBLER H      */
                  PARM(DECK,NOOBJECT,USING(WARN(2)))
                  RC(4)
                  .
                ADD UTILITY(LINKEDIT)       /* LINK EDIT UTILITY ENTRY    */
                  NAME(HEWLH096)          /* NAME OF LINKAGE EDITOR     */
                  RC(4)                   /* RETURN CODE THRESHOLD      */
                  PRINT(SYSPRINT)         /* DDNAME FOR SYSPRINT OUTPUT */
                  PARM(SIZE=(1526K,100K),NCAL,LET,LIST,XREF) /* SIZE OVERRIDE */
                  .
                ADD DDDEF(SMPOUT)   SYSOUT(*) .
                ADD DDDEF(SMPRPT)   SYSOUT(*) .
                ADD DDDEF(SMPLIST)  SYSOUT(*) .
                ADD DDDEF(SYSPRINT) SYSOUT(*) .
                ADD DDDEF(SMPSNAP)  SYSOUT(*) .
                ADD DDDEF(SMPTLIB)  UNIT(SYSALLDA) .
                ADD DDDEF(SMPTLOAD) CYL SPACE(2,1) DIR(10) UNIT(SYSALLDA) .
                ADD DDDEF(SYSUT1)   CYL SPACE(2,1) UNIT(SYSALLDA) .
                ADD DDDEF(SYSUT2)   CYL SPACE(2,1) UNIT(SYSALLDA) .
                ADD DDDEF(SYSUT3)   CYL SPACE(2,1) UNIT(SYSALLDA) .
                ADD DDDEF(SYSUT4)   CYL SPACE(2,1) UNIT(SYSALLDA) .
                ADD DDDEF(SMPLOG)   DA(IMSTESTL.ZOAU100.SMPLOG) MOD .
                ADD DDDEF(SMPLOGA)  DA(IMSTESTL.ZOAU100.SMPLOGA) MOD .
                ADD DDDEF(SMPLTS)   DA(IMSTESTL.ZOAU100.SMPLTS) SHR .
                ADD DDDEF(SMPMTS)   DA(IMSTESTL.ZOAU100.SMPMTS) SHR .
                ADD DDDEF(SMPPTS)   DA(IMSTESTL.ZOAU100.SMPPTS) SHR .
                ADD DDDEF(SMPSCDS)  DA(IMSTESTL.ZOAU100.SMPSCDS) SHR .
                ADD DDDEF(SMPSTS)   DA(IMSTESTL.ZOAU100.SMPSTS) SHR .
              ENDUCL .

