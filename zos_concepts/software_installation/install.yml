###############################################################################
# Â© Copyright IBM Corporation 2020
# Contributed by the Ansible Content for IBM Z Team
#
# Changelog
#  All notable changes to this sample will be documented in this playbook
#
# 2020-09-01
#  - Released initial version
###############################################################################

###############################################################################
# Requirements:
#     - IBM z/OS core collection 1.2.0 or later
###############################################################################

- hosts: zos_host
  collections:
    - ibm.ibm_zos_core
  gather_facts: no
  environment: "{{ environment_vars }}"
  vars:
    ptf: "UI70435"
    global_csi: "IMSTESTL.ZOAU100.CSI"
    smpe_hlq: "IMSTESTL.ZOAU100"
    storage_class: "DB2SMS10"
    target_zone: "TGT"
    dist_zone: "DLIB"
    smpe_root: "/var/zoau100"
    package_location: "" # smpnts or pending_order or ibm_server or '' if already in GLOBAL zone
    # package_id: "ORD00001-12February2021-09.40.40.938"
    order_number: "ORD00002"
    server_info:
      - "<SERVER"
      - 'host="deliverycb-bld.dhe.ibm.com"'
      - 'user="S4n98585"'
      - 'pw="a724c585154011r"'
      - ">"
      - "<PACKAGE"
      - 'file="2021020107251/PROD/GIMPAF.XML"'
      - 'hash="1F804B036296255018175B60EF16428A6AB4AFED"'
      - 'id="U02256470"'
      - ">"
      - "</PACKAGE>"
      - "</SERVER>"
    are_ptfs_applied: false
    receive_successful: false

  tasks:
    # RECEIVE PTF from SMPPTS dataset
    # - name: "RECEIVE PTF {{ptf}} from SMPPTS dataset into CSI Global Zone"
    #   zos_mvs_raw:
    #     pgm: GIMSMP
    #     auth: "yes"
    #     dds:
    #       - dd_data_set:
    #           dd_name: "SMPCSI"
    #           data_set_name: "{{ global_csi }}"
    #       - dd_data_set:
    #           dd_name: "SMPPTFIN"
    #           data_set_name: "{{ smpe_hlq }}.SMPPTS"
    #       - dd_output:
    #           dd_name: "SMPOUT"
    #           return_content:
    #             type: text
    #       - dd_input:
    #           dd_name: "SMPCNTL"
    #           content:
    #             - 'SET  BOUNDARY(GLOBAL) .'
    #             - 'RECEIVE SELECT('
    #             - '    {{ ptf }}'
    #             - ') SYSMODS LIST .'
    #   when: package_location == ''
    #   register: receive_result

    # Download PTF from SMPNTS directory
    - name: "RECEIVE PTF from SMPNTS directory into CSI Global Zone"
      zos_mvs_raw:
        pgm: GIMSMP
        auth: "yes"
        dds:
          - dd_data_set:
              dd_name: "SMPCSI"
              data_set_name: "{{ global_csi }}"
              disposition: old

          - dd_output:
              dd_name: "SMPOUT"
              return_content:
                type: text
          - dd_unix:
              dd_name: "SMPNTS"
              path: "{{smpe_root}}/smpnts/"

          - dd_input:
              dd_name: "SMPCNTL"
              content:
                - " SET  BOUNDARY(GLOBAL) ."
                - "RECEIVE SYSMODS HOLDDATA"
                - "FROMNTS("
                - "ORDER({{ order_number }})"
                - ")."
      when: package_location == 'smpnts'
      register: receive_result

    # Download pending order
    - name: "RECEIVE PTF using a pending order into CSI Global Zone"
      zos_mvs_raw:
        pgm: GIMSMP
        auth: "yes"
        dds:
          - dd_data_set:
              dd_name: "SMPCSI"
              data_set_name: "{{ global_csi }}"
              disposition: old

          - dd_output:
              dd_name: "SMPOUT"
              return_content:
                type: text
          - dd_unix:
              dd_name: "SMPNTS"
              path: "{{smpe_root}}/smpnts/"

          - dd_input:
              dd_name: "SMPCNTL"
              content:
                - " SET  BOUNDARY(GLOBAL) ."
                - "RECEIVE SYSMODS HOLDDATA"
                - "ORDER("
                - "PENDING({{order_number}})"
                - "CLIENT(CLNTINFO)"
                - ")."
          - dd_input:
              dd_name: "CLNTINFO"
              content:
                - "<CLIENT"
                - 'downloadmethod="https"'
                - 'downloadkeyring="javatruststore"'
                - 'javahome="/usr/lpp/java/java180/J8.0_64"'
                - ">"
                - "</CLIENT>"
      when: package_location == 'pending_order'
      register: receive_result

    # Download PTF from network
    - name: "RECEIVE PTF from IBM server into CSI Global Zone"
      zos_mvs_raw:
        pgm: GIMSMP
        auth: "yes"
        dds:
          - dd_data_set:
              dd_name: "SMPCSI"
              data_set_name: "{{ global_csi }}"
              disposition: old

          - dd_output:
              dd_name: "SMPOUT"
              return_content:
                type: text
          - dd_unix:
              dd_name: "SMPNTS"
              path: "{{smpe_root}}/smpnts/"
          - dd_input:
              dd_name: "SMPCNTL"
              content:
                - " SET  BOUNDARY(GLOBAL) ."
                - "RECEIVE SYSMODS HOLDDATA"
                - "FROMNETWORK("
                - "SERVER(SERVINFO)"
                - "CLIENT(CLNTINFO)"
                - ")."
          - dd_input:
              dd_name: "SERVINFO"
              content: "{{ server_info }}"
          - dd_input:
              dd_name: "CLNTINFO"
              content:
                - "<CLIENT"
                - 'downloadmethod="https"'
                - 'downloadkeyring="javatruststore"'
                - 'javahome="/usr/lpp/java/java180/J8.0_64"'
                - ">"
                - "</CLIENT>"
      when: package_location == 'ibm_server'
      register: receive_result

    # APPLY CHECK
    - name: "Perform APPLY CHECK for {{ ptf }}"
      zos_mvs_raw:
        pgm: GIMSMP
        auth: "yes"
        dds:
          - dd_data_set:
              dd_name: "SMPCSI"
              data_set_name: "{{ global_csi }}"
              disposition: old

          - dd_output:
              dd_name: "SMPOUT"
              return_content:
                type: text

          - dd_input:
              dd_name: "SMPCNTL"
              content: " SET BOUNDARY({{target_zone}}) .
                \nAPPLY SELECT(
                \n{{ptf}}
                \n)
                \nCHECK
                \nBYPASS(HOLDSYS,HOLDERROR)
                \nCOMPRESS(ALL) ."
      when: receive_result is skipped or receive_result.ret_code.code <=4
      register: apply_check_result

    # APPLY
    - name: "Perform APPLY for {{ ptf }}"
      zos_mvs_raw:
        pgm: GIMSMP
        auth: "yes"
        dds:
          - dd_data_set:
              dd_name: "SMPCSI"
              data_set_name: "{{ global_csi }}"
              disposition: old

          - dd_output:
              dd_name: "SMPOUT"
              return_content:
                type: text

          - dd_input:
              dd_name: "SMPCNTL"
              content: " SET BOUNDARY({{target_zone}}) .
                \nAPPLY SELECT(
                \n{{ptf}}
                \n)
                \nBYPASS(HOLDSYS,HOLDERROR)
                \nCOMPRESS(ALL) ."

      when: apply_check_result.ret_code.code <= 4
