---
# Copyright (c) IBM Corporation 2021

# tasks file for add_certificate


###########################################################################
# START ZOS HEALTH CHECKER
###########################################################################
# - name: start zos Health Checker
#   ibm.ibm_zos_core.zos_operator:
#     cmd: 's hzsproc'

###########################################################################
# MODIFY EXPIRATION DAYS
###########################################################################
# - name: start zos Health Checker
#   ibm.ibm_zos_core.zos_operator:
    # cmd:
    # - f hzsproc,update,check(ibmracf,RACF_CERTIFICATE_EXPIRATION),
    # - PARM='days(366)'

###########################################################################
# ISSUE ALL RACF COMMANDS NEEDED TO AUTHORIZE AND ADD CERTIFICATES
###########################################################################
- name: Define, permit and activate FACILITY class
  ibm.ibm_zos_core.zos_mvs_raw:
    pgm: ikjeft01
    auth: yes
    parm: "REGIONS=0K"
    dds:
      - dd_output:
          dd_name: sysprint
          return_content:
            type: text
      - dd_output:
          dd_name: systsprt
          return_content:
            type: text
      - dd_output:
          dd_name: sysdump
          return_content:
            type: text
      - dd_input:
          dd_name: systsin
          content:
            - RDEFINE XFACILIT HZS.{{system_name}}.*.*.MESSAGES UACC(NONE)
            - PERMIT HZS.{{system_name}}.*.*.MESSAGES CLASS(XFACILIT) +
            - ID({{ansible_user}}) ACCESS(READ)
            - SETROPTS CLASSACT(XFACILIT)
            - SETROPTS RACLIST(XFACILIT) REFRESH
            - RACDCERT GENCERT CERTAUTH KEYUSAGE(CERTSIGN) SUBJECTSDN(CN('TEST CA') +
            - OU('ANSIBLE CORE') C('US')) WITHLABEL('TEST CA CERT')
            - RACDCERT GENCERT ID({{ansible_user}}) SUBJECTSDN(CN('www.TEST.com') +
            - OU('ANSIBLE CORE') C('US')) WITHLABEL('WEB SERVER CERT')  +
            - SIGNWITH(CERTAUTH LABEL('TEST CA CERT'))
            - RACDCERT EXPORT(LABEL('TEST CA CERT')) CERTAUTH +
            - DSN('{{ ansible_user }}.CA.CERT.B64')
            - RACDCERT CHECKCERT('{{ ansible_user }}.CA.CERT.B64')
            - RACDCERT ADDDRING(WEBSSL) ID({{ansible_user}})
            - RACDCERT ID({{ansible_user}}) CONNECT(CERTAUTH LABEL('TEST CA CERT') +
            - RING(WEBSSL))
            - RACDCERT ID({{ansible_user}}) CONNECT(LABEL('WEB SERVER CERT') +
            - RING(WEBSSL) DEFAULT)
            - RACDCERT LISTRING(WEBSSL)
            - RACDCERT LISTCHAIN (LABEL('WEB SERVER CERT')) ID({{ansible_user}})

# ###########################################################################
# # RENEW A LOCAL-CA CERTIFICATE
# ###########################################################################
# - name: Generate cert request and sign with local CA
#   ibm.ibm_zos_core.zos_mvs_raw:
#     pgm: ikjeft01
#     auth: yes
#     parm: "REGIONS=0K"
#     dds:
#       - dd_output:
#           dd_name: sysprint
#           return_content:
#             type: text
#       - dd_output:
#           dd_name: systsprt
#           return_content:
#             type: text
#       - dd_output:
#           dd_name: sysdump
#           return_content:
#             type: text
#       - dd_input:
#           dd_name: systsin
#           content:
#             - RACDCERT GENREQ (LABEL('WEB SERVER CERT')) ID({{ansible_user}}) +
#             - DSN('{{ ansible_user }}.CERT.REQUEST')
#             - RACDCERT ID({{ansible_user}}) GENCERT('{{ ansible_user }}.CERT.REQUEST') +
#             - SIGNWITH(CERTAUTH LABEL('TEST CA CERT'))

# ###########################################################################
# # RENEW A SELF-SIGNED CERTIFICATE
# ###########################################################################
# - name: Generate cert request and self sign
#   ibm.ibm_zos_core.zos_mvs_raw:
#     pgm: ikjeft01
#     auth: yes
#     parm: "REGIONS=0K"
#     dds:
#       - dd_output:
#           dd_name: sysprint
#           return_content:
#             type: text
#       - dd_output:
#           dd_name: systsprt
#           return_content:
#             type: text
#       - dd_output:
#           dd_name: sysdump
#           return_content:
#             type: text
#       - dd_input:
#           dd_name: systsin
#           content:
#             - RACDCERT GENREQ (LABEL('WEB SERVER CERT')) ID({{ansible_user}}) +
#             - DSN('{{ ansible_user }}.CERT.REQUEST')
#             - RACDCERT ID({{ansible_user}}) GENCERT('{{ ansible_user }}.CERT.REQUEST') +
#             - SIGNWITH(LABEL('WEB SERVER CERT'))

