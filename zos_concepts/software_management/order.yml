###############################################################################
# Â© Copyright IBM Corporation 2020
# Contributed by the Ansible Content for IBM Z Team
#
# Changelog
#  All notable changes to this sample will be documented in this playbook
#
# 2020-09-01
#  - Released initial version
###############################################################################

###############################################################################
# Requirements:
#     - IBM z/OS core collection 1.2.0 or later
###############################################################################

- hosts: zos_host
  collections:
    - ibm.ibm_zos_core
  gather_facts: no
  environment: "{{ environment_vars }}"
  vars:
    ptfs: ['UI70435']
    global_csi: 'IMSTESTL.ZOAU100.CSI'
    # storage_class: 'DB2SMS10'
    # target_zone: 'TGT'
    # dist_zone: 'DLIB'
    smpe_root: '/var/zoau100'
    # package_location: 'order'   # local or order or server or '' if already RECEIVED
    # package_id: 'U02256470'
    # order_number: '6726281'
    server_info:
      - '<ORDERSERVER'
      - '  url="https://eccgw01.boulder.ibm.com/services/projects/ecc/ws"'
      - '  keyring="SMPERING"'
      - '  certificate="SMPE Client Certificate">'
      - '</ORDERSERVER>'
    client_info:
      - '<CLIENT'
      - '  downloadmethod="https"'
      - '  javahome="/usr/lpp/java/java180/J8.0_64"'
      - '  classpath="/usr/lpp/smp/classes">'
      - '</CLIENT>'
    are_ptfs_applied: false
    receive_successful: false

  tasks:
      # Order PTF from IBM
      - name: "ORDER PTF {{ptfs[0]}} from IBM server"
        zos_mvs_raw:
          pgm: GIMSMP
          auth: "yes"
          dds:
            - dd_data_set:
                dd_name: "SMPCSI"
                data_set_name: "{{ global_csi }}"
            - dd_output:
                dd_name: "SMPOUT"
                return_content:
                    type: text
            - dd_unix:
                dd_name: "SMPNTS"
                path: "{{smpe_root}}/smpnts/"
            - dd_input:
                dd_name: "SMPCNTL"
                content:
                  - 'SET  BOUNDARY(GLOBAL) .'
                  - 'RECEIVE ORDER('
                  - '           CONTENT(PTFS({{ ptfs[0] }}))'
                  - '           ORDERSERVER(SERVINFO)'
                  - '           CLIENT(CLNTINFO)'
                  - '              )'
                  - DELETEPKG.
            - dd_input:
                dd_name: "SERVINFO"
                content: "{{ server_info }}"
            - dd_input:
                dd_name: "CLNTINFO"
                content: "{{ client_info }}"
        register: order_result