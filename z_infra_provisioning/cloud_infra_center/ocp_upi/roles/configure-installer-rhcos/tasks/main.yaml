# =================================================================
# Licensed Materials - Property of IBM
#
# (c) Copyright IBM Corp. 2021 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
# =================================================================

---
- name: 'Import common yaml'
  import_tasks: common.yaml

- name: 'Set fact for openshift client'
  set_fact:
    openshift_rhcos_url: "https://mirror.openshift.com/pub/openshift-v4/{{ ansible_architecture }}/dependencies/rhcos/{{ openshift_version }}/{{ openshift_version }}.{{ openshift_minor_version }}"
    openshift_install_dir: "."

- name: Download checksum for the rhcos image
  get_url:
    url: "{{ openshift_rhcos_url }}/sha256sum.txt"
    dest: "{{ openshift_install_dir }}/.sha256sum_remote.txt"
    force: yes

- name: Get checksum for the rhcos image
  slurp:
    src: "{{ openshift_install_dir }}/.sha256sum_remote.txt"
  register: openshift_rhcos_checksum_results

- name: Get existing RHCOS image from ICIC glance
  shell: "openstack image list --format value| grep -w 'rhcos'| awk '{print$1}'"
  register: icic_rhcos_id

- name: Get existing RHCOS image SHA256 from ICIC glance
  shell: |
    if [ ! -z "{{ icic_rhcos_id.stdout }}" ]; then
      echo $(openstack image show --format json -c properties {{ icic_rhcos_id.stdout }} | grep owner_specified.openstack.sha256 | cut -d ':' -f2 | sed 's/[^a-zA-Z0-9]//g')
    else
      echo "rhcos"
    fi
  register: icic_rhcos_sha256_value

- name: Compare existing rhcos image with sha256
  shell: |
    if [ ! -z "{{ icic_rhcos_id.stdout }}" ] && [ {{ vm_type }} = "zvm" ] && [ {{ disk_type }} = "scsi" ] ; then
      count=$(grep -E '{{ icic_rhcos_sha256_value.stdout }}.*rhcos-metal.s390x.raw.gz' .sha256sum_remote.txt | wc -l)
    elif [ ! -z "{{ icic_rhcos_id.stdout }}" ] && [ {{ vm_type }} = "zvm" ] && [ {{ disk_type }} = "dasd" ]; then
      count=$(grep -E '{{ icic_rhcos_sha256_value.stdout }}.*rhcos-dasd.s390x.raw.gz' .sha256sum_remote.txt | wc -l)
    elif [ ! -z "{{ icic_rhcos_id.stdout }}" ] && [ {{ vm_type }} = "kvm" ]; then
      count=$(grep -E '{{ icic_rhcos_sha256_value.stdout }}.*rhcos-openstack.s390x.raw.gz' .sha256sum_remote.txt | wc -l)
    else
      count=0
    fi
    echo $count
  register: use_local_rhcos

- name: Remove the existing RHCOS image from ICIC glance
  shell: "openstack image delete rhcos"
  when: 
  - icic_rhcos_id.stdout != ""
  - use_local_rhcos.stdout | int != 1

- name: Download openshift rhcos metal image
  get_url:
    url: "{{ openshift_rhcos_url }}/rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x-metal.s390x.raw.gz"
    dest: "{{ openshift_install_dir }}/rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x.gz"
  when:
  - vm_type == "zvm"
  - disk_type == "scsi"
  - use_local_rhcos.stdout | int != 1

- name: Download openshift rhcos dasd image
  get_url:
    url: "{{ openshift_rhcos_url }}/rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x-dasd.s390x.raw.gz"
    dest: "{{ openshift_install_dir }}/rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x.gz"
  when:
  - vm_type == "zvm"
  - disk_type == "dasd"
  - use_local_rhcos.stdout | int != 1

- name: Download openshift rhcos qcow2 image
  get_url:
    url: "{{ openshift_rhcos_url }}/rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x-openstack.s390x.qcow2.gz"
    dest: "{{ openshift_install_dir }}/rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x.gz"
  when:
  - vm_type == "kvm"
  - use_local_rhcos.stdout | int != 1

- name: Generate sha256 for local rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x.gz
  shell: "sha256sum {{ openshift_install_dir }}/rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x.gz > .sha256sum_local.txt"
  when:
  - use_local_rhcos.stdout | int != 1

- name: Get sha256 for local rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x.gz
  shell: "cat .sha256sum_local.txt | awk -F ' ' '{print $1}'"
  register: openshift_rhcos_sha256_results
  when:
  - use_local_rhcos.stdout | int != 1

- name: Unzip openshift rhcos image
  command:
    cmd: |
        gzip -d -f rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x.gz
  when: use_local_rhcos.stdout | int != 1

- name: Upload RHCOS image to ICIC glance
  command: 
    cmd: openstack image create --disk-format=raw  --property sha256={{ openshift_rhcos_sha256_results.stdout}} --property architecture=s390x --property os_name=Linux --property os_version=RHCOS{{ openshift_version }} --property os_distro=RHCOS{{ openshift_version }} --property hypervisor_type=ZVM --property disk_type=SCSI --file=rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x rhcos
  when: 
  - vm_type == "zvm"
  - disk_type == "scsi"
  - use_local_rhcos.stdout | int != 1

- name: Upload RHCOS image to ICIC glance
  command: 
    cmd: openstack image create --disk-format=raw  --property sha256={{ openshift_rhcos_sha256_results.stdout }} --property architecture=s390x --property os_name=Linux --property os_version=RHCOS{{ openshift_version }} --property os_distro=RHCOS{{ openshift_version }} --property hypervisor_type=ZVM --property disk_type=DASD --file=rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x rhcos
  when: 
  - vm_type == "zvm"
  - disk_type == "dasd"
  - use_local_rhcos.stdout | int != 1

- name: Upload RHCOS image to ICIC glance
  command: 
    cmd: openstack image create --disk-format=qcow2 --property sha256={{ openshift_rhcos_sha256_results.stdout }} --property architecture=s390x --property os_name=Linux --property os_version=RHCOS{{ openshift_version }} --property os_distro=RHCOS{{ openshift_version }} --property hypervisor_type=kvm --file=rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x rhcos
  when: 
  - vm_type == "kvm"
  - use_local_rhcos.stdout | int != 1

- name: Remove local RHCOS image
  file:
    state: absent
    path: rhcos-{{ openshift_version }}.{{ openshift_minor_version }}-s390x
  when: use_local_rhcos.stdout | int != 1