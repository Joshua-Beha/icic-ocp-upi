---
# Copyright (c) IBM Corporation 2020

# tasks file for add-zos-user

- name: Set omvs_home_directory if not set
  set_fact:
    omvs_home_directory: "/u/{{ userid }}"
  when: omvs_home_directory is not defined or not omvs_home_directory

- name: Verify user does not exist
  ibm.ibm_zos_core.zos_tso_command:
    commands: LISTUSER ({{ userid | upper }})
  register: listuser_response
  failed_when: false

- name: Assert desired userid is not in use
  fail:
    msg: "User ID {{ userid | upper }} is in use."
  when: '"UNABLE TO LOCATE USER" not in listuser_response.get("output", [{}])[0].get("content", [""])[0]'

- name: Add user
  ibm.ibm_zos_core.zos_tso_command:
    commands: "{{ lookup('template', '../templates/add-user.j2') }}"

- block:
    - name: Create generic profile
      ibm.ibm_zos_core.zos_tso_command:
        commands: "ADDSD '{{ userid | upper }}.**' UACC(NONE)"
  rescue:
    - name: Create generic profile, without support for enhanced generic naming
      ibm.ibm_zos_core.zos_tso_command:
        commands: "ADDSD '{{ userid | upper }}.*' UACC(NONE)"

- name: Permit access to resources
  ibm.ibm_zos_core.zos_tso_command:
    commands: "{{ lookup('template', '../templates/update-resource-access.j2') }}"
  with_items: "{{ resources_to_permit }}"
  when: resources_to_permit is defined and resources_to_permit and resources_to_permit | length > 0

- name: Define alias for user ID
  ibm.ibm_zos_core.zos_tso_command:
    commands: "{{ lookup('template', '../templates/define-alias.j2') }}"

- name: Create the users ISPPROF data set
  ibm.ibm_zos_core.zos_data_set:
    name: "{{ userid }}.SPF.ISPPROF"
    state: present
    type: pds
    space_primary: 2
    space_secondary: 1
    space_type: trk
    block_size: 3120
    record_length: 80

- name: Create LDS for ZFS data set
  ibm.ibm_zos_core.zos_data_set:
    name: "{{ omvs_zfs_data_set_name }}"
    state: present
    replace: yes
    type: lds
    space_primary: "{{ omvs_zfs_data_set_size if omvs_zfs_data_set_size else '50' }}"
    space_secondary: "{{ omvs_zfs_data_set_size if omvs_zfs_data_set_size else '50' }}"
    space_type: cyl
  register: lds_create_response

- name: Format LDS as ZFS
  command: zfsadm format -aggregate {{ omvs_zfs_data_set_name }}

- name: Create user's omvs directory if it does not exist
  file:
    path: "{{ omvs_home_directory }}"
    state: directory
    owner: "{{ userid }}"
    group: "{{ omvs_gid if omvs_gid | default(false) else omit }}"

- name: Mount ZFS to user directory
  command: mount -t zfs -f {{ omvs_zfs_data_set_name | upper }} {{ omvs_home_directory }}

- name: Overwrite permissions to directory if necessary
  file:
    path: "{{ omvs_home_directory }}"
    state: directory
    owner: "{{ userid }}"
    group: "{{ omvs_gid if omvs_gid | default(false) else omit }}"

- name: Copy files
  ibm.ibm_zos_core.zos_copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items: "{{ files_to_copy }}"
  when: files_to_copy is defined and files_to_copy | length > 0

- name: Copy templates
  include_tasks:
    name: copy-template.yml
  with_items: "{{ templates_to_copy }}"
  when: templates_to_copy is defined and templates_to_copy | length > 0