---
# Copyright (c) IBM Corporation 2020

# tasks file for remove-zos-user
- name: Set omvs_home_directory if not set
  set_fact:
    omvs_home_directory: "/u/{{ userid }}"
  when: omvs_home_directory is not defined or not omvs_home_directory

- name: Get information about user's home directory
  stat:
    path: "{{ omvs_home_directory }}"
  register: stat_response

- name: Unmount the user's ZFS data set
  command: unmount {{ omvs_home_directory }}
  when: stat_response.isdir is defined and stat_response.isdir

- name: Remove the user's ZFS data set
  ibm.ibm_zos_core.zos_data_set:
    name: "{{ omvs_zfs_data_set_name }}"
    state: absent

- name: Remove the user's omvs directory
  file:
    path: "{{ omvs_home_directory }}"
    state: absent

- name: Get information about the user
  ibm.ibm_zos_core.zos_tso_command:
    commands: LISTUSER ({{ userid | upper }})
  register: listuser_response
  failed_when: false

- block:
  - name: Remove user from groups, assign new owner for group data sets
    ibm.ibm_zos_core.zos_tso_command:
      commands: "{{ lookup('template', '../templates/remove-from-group.j2') }}"
    with_items: '{{ listuser_response.get("output", [{}])[0].get("content", [""]) | user_groups }}'

  - name: Delete user data sets
    command: "drm {{ userid | upper }}.**"
    register: drm_response
    failed_when: drm_response.get("rc", 1) > 0 and "BGYSC1503E" not in drm_response.get("stderr", "")

  - name: Delete alias from catalog
    ibm.ibm_zos_core.zos_tso_command:
      commands: "DELETE '{{ userid | upper }}' ALIAS"
    ignore_errors: yes

  - name: Delete generic profile
    ibm.ibm_zos_core.zos_tso_command:
      commands: "DELDSD '{{ userid | upper }}.**'"
    ignore_errors: yes

  - name: Delete generic profile
    ibm.ibm_zos_core.zos_tso_command:
      commands: "DELDSD '{{ userid | upper }}.*'"
    ignore_errors: yes

  - name: Remove the user
    ibm.ibm_zos_core.zos_tso_command:
      commands: "DELUSER ({{ userid | upper }})"
  when: '"UNABLE TO LOCATE USER" not in listuser_response.get("output", [{}])[0].get("content", [""])[0]'


